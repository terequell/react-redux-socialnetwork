{"version":3,"sources":["components/Messages/Messages.module.css","components/Messages/MessagesForms.jsx","components/Messages/CurrentDialog.jsx"],"names":["module","exports","minLength3","minLength","maxLength30","maxLength","reduxForm","form","props","onSubmit","handleSubmit","Field","name","component","Textarea","type","className","styles","textarea","placeholder","validate","CurrentDialog","React","memo","userId","useParams","useEffect","setInterval","getMessagesWithUserThunkCreator","messages","current__dialog__block","dialog__name","changingMessagesFlag","map","element","senderName","body","formData","sendNewMessageToUser","newMessage","reset","Loading","compose","connect","state","dialogs","currentMessages","changingMessages"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,SAAW,2BAA2B,YAAc,8BAA8B,eAAiB,iCAAiC,SAAW,2BAA2B,WAAa,6BAA6B,mBAAqB,qCAAqC,cAAgB,gCAAgC,WAAa,6BAA6B,aAAe,+BAA+B,WAAa,6BAA6B,aAAe,iC,gHCK3dC,EAAaC,YAAU,GACvBC,EAAcC,YAAU,IAafC,cAAU,CAACC,KAAM,iBAAjBD,EAXQ,SAACE,GACrB,OACG,0BAAMC,SAAYD,EAAME,cACrB,kBAACC,EAAA,EAAD,CAAOC,KAAO,aAAaC,UAAaC,IACjCC,KAAO,OAAOC,UAAaC,IAAOC,SAClCC,YAAc,qBAAqBC,SAAY,CAAClB,EAAYE,KACnE,oD,+CCLHiB,EAAgBC,IAAMC,MAAK,SAACf,GAAW,IACnCgB,EAAUC,cAAVD,OAEPE,qBAAU,WACPC,aAAY,kBAAMnB,EAAMoB,gCAAgCJ,KAAS,OACjE,CAACA,IAOJ,OACIhB,EAAMqB,SACP,yBAAKb,UAAaC,IAAOa,wBACtB,uBAAGd,UAAaC,IAAOc,cAAvB,kBAAqDP,EAArD,KACA,6BACIhB,EAAMwB,qBAAuB,KAAOxB,EAAMqB,SAASI,KAAI,SAAAC,GAAO,OAAI,6BAAK,2BAAIA,EAAQC,WAAZ,IAAyBD,EAAQE,WAE5G,6BACG,kBAAC,EAAD,CAAgB3B,SAbH,SAAC4B,GACpB7B,EAAM8B,qBAAqBd,EAAQa,EAASE,YAC5C/B,EAAMgC,MAAM,sBAIM,kBAACC,EAAA,EAAD,SAqBTC,sBACZC,aARqB,SAACC,GACtB,MAAO,CACJf,SAAUe,EAAMC,QAAQC,gBACxBd,qBAAsBY,EAAMC,QAAQE,oBAKf,CAACP,UAAOF,yBAAsBV,sCAD1Cc,CAEbrB","file":"static/js/3.7775a182.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__1yGBl\",\"users__list\":\"Messages_users__list__x5azK\",\"textOfMessages\":\"Messages_textOfMessages__fROQb\",\"textarea\":\"Messages_textarea__1JFpH\",\"sendButton\":\"Messages_sendButton__9pAft\",\"messagesuser__item\":\"Messages_messagesuser__item__1LInE\",\"user__content\":\"Messages_user__content__qJSz3\",\"user__info\":\"Messages_user__info__2Aora\",\"user__avatar\":\"Messages_user__avatar__2GRTn\",\"user__name\":\"Messages_user__name__3Qadg\",\"dialog__name\":\"Messages_dialog__name__SizCm\"};","import React from 'react'\r\nimport styles from './Messages.module.css'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {minLength, maxLength} from '../utils/formValidators'\r\nimport {Textarea} from '../common/FormContols/FormControls'\r\n\r\nconst minLength3 = minLength(3)\r\nconst maxLength30 = maxLength(30)\r\n\r\nconst AddMessageForm = (props) => {\r\n   return(\r\n      <form onSubmit = {props.handleSubmit}>\r\n         <Field name = 'newMessage' component = {Textarea} \r\n                type = 'text' className = {styles.textarea} \r\n                placeholder = 'Enter your message' validate = {[minLength3, maxLength30]}/> \r\n         <button>Send message</button>\r\n      </form>\r\n   )\r\n}\r\n\r\nexport default reduxForm({form: 'addNewMessage'})(AddMessageForm)","import React, { useEffect } from 'react'\r\nimport styles from './Messages.module.css'\r\nimport AddMessageForm from './MessagesForms'\r\nimport {reset} from 'redux-form'\r\nimport { connect } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport {sendNewMessageToUser, getMessagesWithUserThunkCreator} from '../../redux/dialogsReducer'\r\nimport Loading from '../common/Loading'\r\nimport { compose } from 'redux'\r\n\r\nconst CurrentDialog = React.memo((props) => {\r\n   const {userId} = useParams();\r\n\r\n   useEffect(() => {\r\n      setInterval(() => props.getMessagesWithUserThunkCreator(userId), 7000)\r\n   }, [userId])\r\n\r\n   const getNewMessage = (formData) => {\r\n      props.sendNewMessageToUser(userId, formData.newMessage)\r\n      props.reset('addNewMessage')\r\n   }\r\n\r\n   return (\r\n      !props.messages ? <Loading/> :\r\n      <div className = {styles.current__dialog__block}>\r\n         <p className = {styles.dialog__name}>Dialog with id {userId} </p>\r\n         <div>\r\n            {props.changingMessagesFlag ? null : props.messages.map(element => <div><p>{element.senderName}:{element.body}</p></div>)}\r\n         </div>\r\n         <div>\r\n            <AddMessageForm onSubmit = {getNewMessage}/>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n)\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      messages: state.dialogs.currentMessages,\r\n      changingMessagesFlag: state.dialogs.changingMessages\r\n   }\r\n}\r\n\r\nexport default compose (\r\n   connect(mapStateToProps,{reset, sendNewMessageToUser, getMessagesWithUserThunkCreator})\r\n)(CurrentDialog)"],"sourceRoot":""}